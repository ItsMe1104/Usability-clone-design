/* Do all these styling in every website almost */
/* These are called resets */
/* 1 Import fonts */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500&family=Roboto:wght@400;700&display=swap');

/* 2 Use universal selector */
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* 3 Declare variables */

/*Way to create global variable so that we dont have to define colours or other properties again and again*/
:root{
    --primary-text-color: #183b56;
    --secondary-text-color: #577592;
    --accent-color: #2294ed;
    --accent-color-dark: #1d69a3;
    --padding-inline-section: 20px;
}


/* 4 font family of body and their color */
body{
    font-family: 'Poppins', sans-serif ;
    color: var(--primary-text-color);
}

/* 5 Sizes of heading */
h1{
    font-size: 3rem;
}
h2{
    font-size: 2rem;
}

h3{
    font-size: 1.5rem;
}

/* 6 design of paragraphs */
p{
    font-family: 'Roboto', sans-serif;
    font-size: 1.25rem;
    color: var(--secondary-text-color);
    line-height: 1.8rem;
}

/* 7 Designs of anchor */
a{
    text-decoration: none;   /* so that they dont underline*/
    display: inline-block;   /*by default they are inline*/
}

ul{
    list-style: none;
}

/* ******************************************************** */
/* Utility classes */

.small-bold-text{
    font-size: 1rem;
    font-weight: 700;
}

.container{                /*will wrap all sections within this container so that we can give each section a specific margin */

    max-width: 1080px;   /*matlab usse chota ho payega lekin usse bada nahi hoga*/
    margin-inline: auto; /*jitna space bacha hoga screen ka will be used for margin
    
    margine-inline -> means margin on left and right*/  
    padding-inline: var(--padding-inline-section);
}

.flex{       /*so that we dont need to make divs flex everytime , we can overwrite them later in their own class*/
    display: flex;
    align-items: center;
}

.hover-link{
    color: var(--primary-text-color);
    transition: 0.2s ease-out;          /*animation to make hover to stop smoothly when we remove our pointer*/
}

.hover-link:hover{
    color: var(--accent-color);
}

/*making an anchor tag behave as button*/
.primary-button{
    background-color: var(--accent-color);
    border-radius: 6px;
    font-weight: 700;
    color: white !important;   /*because we already defined color in hover-link hence we need to overwrite it*/
    padding: 12px 24px;
    box-shadow: 0 0 2px var(--secondary-text-color);
}

.primary-button:hover{
    background-color: var(--accent-color-dark);
}

.secondary-button{
border: 0.5px solid var(--secondary-text-color);
border-radius: 6px;
font-weight: 700;
color: var(--primary-text-color) !important;
padding: 12px 24px;
transition: 0.2s ease-out;
}

.secondary-button:hover{
    border-color: var(--accent-color);
    color: var(--accent-color) !important;
}

/* top-banner */

.top-banner{
background-image: url('./assets/asset\ 32.png');
    background-color: #4fb3d4;
    
    /*To make the background image repeat in background reduce the background-size and set background-repeat to repeat */
    background-size: 300px;
    background-repeat: repeat;    /*by default already set to repeat*/
}

.banner-text{
    color: white;
    padding: 15px 30px  ;
    text-align: center;
}

/* navbar */

.main-nav{
    margin-top: 20px;
    justify-content: space-between;
}
.company-logo img{
width: 200px;
}

.nav-links{
    flex-basis: 730px;
}
.nav-links ul{
    justify-content: end;
    gap: 40px;
}


/* Hero section */

header {
    padding: 50px var(--padding-inline-section) 0;
}

.header-section {
    margin-top: 50px;
    justify-content: center;
    gap: 50px;
}

.header-left {
    max-width: 40vw;
}

.header-left h1 {
    margin-top: 20px;
}

.get-started-btn {
    margin-top: 20px;
}

.header-right img {
    width: 100%;
}


/* Companies section */

.companies-section{
    margin-bottom: 120px;
}

.companies-header{
    text-align: center;
    margin-top: 110px;
    margin-bottom: 23px;
    color: var(--primary-text-color);
}

.companies-box{
    max-width: 1150px;
}
.logos{
    justify-content: space-between;
    flex-wrap: wrap;
}
.logo{
    height: 46px;
} */


/* features section */

.features-section{
    padding: 80px var(--padding-inline-section) 0;  /*top, left right, bottom*/
    background-image: url(./assets/asset\ 34.svg);
    background-repeat: no-repeat;
    background-position: center;           /*makes the background image comes to center*/
    
}

.features-header{
    text-align: center;
}

.features-heading-text{
    margin-bottom: 20px;
}

.features-area{
flex-wrap: wrap;
justify-content: space-between;
gap: 100px 40px;
margin-block: 50px 80px;
}

.features-card{
    flex-direction: column;
    gap: 20px;
    max-width: 30%;
    text-align: center;
}

.features-card img{
    width: 60px;
}


/* big-feature section */
.big-feature-section{
    padding: 30px var(--padding-inline-section) 0;
}

.big-feature-container{
    gap: 30px;
}

.feature-img img{
    width: 100%;     /*Apne parent div ke 100% rhega*/
}

.feature-desc{
    flex-direction: column;
    align-items: flex-start;   /*text will start from left hand side of container*/
}


/* example section */
/* A different way then how we used in features section */

.examples-section{
    margin-block: 100px;
}
.examples-header{
    flex-direction: column;
    gap: 20px;
}

.examples-area{
    justify-content: space-between;
    margin-block: 30px;
}


/* defining background image here and not inside anchor tag in html because we also want that blackish opacity, hence we can use linear gradient on image this way */
.examples-card{
    width: 23%;  /*to also have some space in between*/
    position: relative;    /*means relative to where it was in static and it will leave a gap in its original place*/
    min-height: 300px;
   
   
    /* if the linear grdoent doesnt work then this black will come into effect */
    background: black;

     /* Attaching a linear gradient black shadow to an image using background property */
    background:linear-gradient(rgb(0,0,0,0.1),rgb(0,0,0,0.8)) ,url(./assets/asset\ 37.jpeg);

    /*to make the image cover inside the given div or its parent*/
    /* should be define just after everytime we use background url even in nth child */
    background-size: cover;
     
    /* even if hover class is present we have to define transition in actual class even if it has to work in hover class */
    transition: 0.2s ease-out
}


/* either use n-th child concept or use inline css in html to define different url for different cards */

.examples-card:nth-child(2){
    background:linear-gradient(rgb(0,0,0,0.1),rgb(0,0,0,0.8)) ,url(./assets/asset\ 36.jpeg);
    background-size: cover;
}
.examples-card:nth-child(3){
    background:linear-gradient(rgb(0,0,0,0.1),rgb(0,0,0,0.8)) ,url(./assets/asset\ 39.jpeg);
    background-size: cover;
    /* evertime we define background url just below we always have to define background-size:cover if we want to */
}
.examples-card:nth-child(4){
    background:linear-gradient(rgb(0,0,0,0.1),rgb(0,0,0,0.8)) ,url(./assets/asset\ 38.jpeg);
    background-size: cover;
}

.examples-card:hover{
    box-shadow: 0 0 10px #888;   /*giving a box-shadow behind every time we hover*/

}

/*making a text appear before image*/
.card-text{
    position: absolute;  /*means relative to its latest relative parent without leaving a gap at its original place*/
    bottom: 20px;
    left: 20px;
    right: 20px;
    color: white;
}


/* cta section */

.cta-section-container{
    flex-direction: column;
    gap: 30px;
    color: white;
}

.cta-section{
    padding: 120px var(--padding-inline-section);
    /* defining here and not in cta-section-container because here we can define padding without disturbing flex items */
    background-color: #183b54;
}

.cta-section-container p{
    /*to be defined specifically as we have already defined in body hence we cannot overwrite in cta-container*/
    color: white;
    margin-top: 20px;
}

/* footer */
footer{
    padding-block: 80px;
    background-color: #ebf2fa;
}

.link-column{
    flex-direction: column;
    align-items: flex-start;
    gap: 20px;
}

.footer-container{
    align-items: flex-start;
    justify-content: space-between;
}


/* subfooter */

.subfooter{
   background-color: #b9cde4; 
   padding: var(--padding-inline-section);
}

.sub-footer-container{
    justify-content: center;
    gap: 30px;
}